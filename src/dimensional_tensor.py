import torch

# 张量的索引和变形 【https://www.bilibili.com/video/BV19v411p7zu/?spm_id_from=333.880.my_history.page.click&vd_source=242a8f935973276a2bc5c149bc30661a】
'''
# 一维张量索引
一维张量的索引过程和 python 原生对象类型的索引一致, 基本格式遵循 [start:end:step], 但是在张量中  step 不能为负数

# 二维张量的索引
可以看成是许多一维向量组成的 
在二维向量中 “，”前表示行，这里可以将它视为一维张量（即暂时看待成一维列表 支持 [start:end:step], "," 后表示列，也同样看成一维列表,支持 [start:end:step]

'''
# 创建一个 4x5 的 tensor
data = torch.tensor([
    [8,6,2,9,9],
    [6,5,2,4,9],
    [8,7,2,8,5],
    [5,1,4,9,9],
])

# 在程序中可以把实际的 1 行看成 0 行， 把实际的 1 列 堪称 0 列 （以下均使用程序中的来看待行和列，即以 0 开始）
print("data)",data)
print("data.shape: ",data.shape) # torch.Size([4, 5])
print("data[1]: ",data[1]) # tensor([6, 5, 2, 4, 9]) 获取第 1 行 （行索引）
print("data[1,1]: ",data[1,1]) # 获取 1 行 1列的某个数 （tensor(5) # 行 列索引
print("data[:,1]: ",data[:,1]) # 获取所有行的第 1 列 tensor([6, 5, 7, 1])
print("data[[1,2], [1,2]]: ",data[[1,2],[1,2]]) # [[1,2],[1,2]] 代表的是获取 1行1列 (1,1)  和 2行 2 列 (2,2)的值 ，所以得倒 tensor([5, 2])

print("data[[[1],[2]], [1,2]]: ",data[[[1],[2]], [1,2]]) # 
"""
在二维向量中 “，”前表示行，这里可以将它视为一维张量（即暂时看待成一维列表 支持 [start:end:step], "," 后表示列，也同样看成一维列表,支持 [start:end:step]
 , 前is: [[1],[2]] 表示的是行，行中的 第1，2 行
 , 后is: [1,2] 表示的是列，列中的 第1，2 列
 所以最终就是选中的是1，2行中的 1，2列，即 tensor([[5, 2],[7, 2]])
"""

print("data[:2,2:]: ", data[:2,2:]) # 代表的是 选中 前两行 并且以第二列开始
"""
, 前 is: :2, 代表的是选中 0，1 行
, 后 is: 2: 代表的是 2 列开始到末尾列
 所以最终就是选中的是 0，1 行 2 列侯的数字 ，即 tensor([[ 2, 9, 9],[2,4,9]])
"""

